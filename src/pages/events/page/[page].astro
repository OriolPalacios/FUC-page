---
export const prerender = false;

// components
import Layout from "@layouts/Layout.astro";
import EventsCard from "@components/EventsCard.astro";
import NavigationPagination from "@components/NavigationPagination.astro";
//assets
import type { EventsItem } from "@customTypes/events";
import type { pageInfo } from "@customTypes/common";
import { getEventsPerPage } from "@services/events";

const page = Astro.params?.page ?? "1";
const pageNumber = parseInt(page, 10);
let data;
let pages: EventsItem[];
let pageInfoData: pageInfo;
try {
  data = await getEventsPerPage(pageNumber);
  pages = data.list;
  pageInfoData = data.pageInfo;
} catch (error) {
  return Astro.redirect("/events/page/1");
}
---

<Layout title="Eventos">
  <h3
    class="text-center font-serif font-bold text-2xl py-6 bg-red-800 text-white mb-5 lg:mt-40 lg:bg-transparent lg:text-gray-800 lg:text-4xl"
  >
    Eventos
  </h3>
  <div
    class="w-full min-h-[600px] md:min-h-[800px] md:max-w-[700px] lg:max-w-[900px] md:mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5 lg:gap-12 mb-4"
  >
    {
      pages && (pages as EventsItem[]).map(
        (eventsItem) => <EventsCard {...eventsItem} />,
      )
    }
  </div>
  {
    pageInfoData && (
      <NavigationPagination
        pageInfoData={pageInfoData}
        currentSection="events"
      />
    )
  }
</Layout>
