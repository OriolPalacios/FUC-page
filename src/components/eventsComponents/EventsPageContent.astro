---
import EventsCard from "@components/eventsComponents/EventsCard.astro";
import NavigationPagination from "@components/generalUtilities/NavigationPagination.astro";
import { getEventsPerPage } from "@services/events";
import type { EventsItem } from "@customTypes/events";
import type { pageInfo } from "@customTypes/common";

const referer = Astro.request.headers.get("Referer") as string;
const url = new URL(referer);
const page = url.searchParams.get("page") || "1";
const pageNumber = parseInt(page, 10);
let data;
let pages: EventsItem[];
let pageInfoData: pageInfo;
try {
  data = await getEventsPerPage(pageNumber);
  pages = data.list;
  pageInfoData = data.pageInfo;
} catch (error) {
  return Astro.redirect("/events/page/1");
}
---

<div
  class="flex flex-wrap justify-center gap-5 mb-16"
>
  {
    pages &&
      (pages as EventsItem[]).map((eventsItem) => (
        <EventsCard {...eventsItem} />
      ))
  }
</div>
{
  pageInfoData && (
    <NavigationPagination pageInfoData={pageInfoData} currentSection="events" />
  )
}
